.data
array:  .word 7, 6, 9, 2, 5  
n:      .word 5              
msg1:   .asciiz "Array antes de ordenar:\n"
msg2:   .asciiz "\nArray después de ordenar:\n"

.text
.globl main

main:
    li $v0, 4
    la $a0, msg1
    syscall

    la $s0, array       
    lw $s1, n           
    li $t0, 0           

print_array_start:
    beq $t0, $s1, bubble_sort   
    sll $t1, $t0, 2           
    add $t2, $s0, $t1         
    lw $a0, 0($t2)            

    li $v0, 1                                      
    syscall

    li $v0, 4
    la $a0, space
    syscall

    addi $t0, $t0, 1
    j print_array_start

#de mínimo a máximo
bubble_sort:
    la $s0, array       
    lw $s1, n           
    sub $s2, $s1, 1     

bubble_outer_loop:
    li $t0, 0           
    li $t3, 0           

bubble_inner_loop:
    sll $t1, $t0, 2         
    add $t4, $s0, $t1       
    lw $t5, 0($t4)          
    addi $t1, $t0, 1
    sll $t1, $t1, 2         
    add $t6, $s0, $t1       
    lw $t7, 0($t6)          

    ble $t5, $t7, no_swap  

    sw $t7, 0($t4)
    sw $t5, 0($t6)
    li $t3, 1           

no_swap:
    addi $t0, $t0, 1
    blt $t0, $s2, bubble_inner_loop 

    beqz $t3, bubble_outer_done
    sub $s2, $s2, 1         
    j bubble_outer_loop

bubble_outer_done:
    li $v0, 4
    la $a0, msg2
    syscall

    la $s0, array
    lw $s1, n
    li $t0, 0

print_array_sorted:
    beq $t0, $s1, done
    sll $t1, $t0, 2
    add $t2, $s0, $t1
    lw $a0, 0($t2)

    li $v0, 1
    syscall

    li $v0, 4
    la $a0, space
    syscall

    addi $t0, $t0, 1
    j print_array_sorted

done:
    li $v0, 10
    syscall

.data
space: .asciiz " "
